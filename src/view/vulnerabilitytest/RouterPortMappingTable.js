/**
 * Created by marco on 17/11/2019.
 *
 * (C) Copyright Fing
 */

import React, {PureComponent} from 'react';
import {bestMakeAndModelAsArray, bestMakeAndModelAsArrayForRouter} from '../../helpers/RecogHelper';
import PropTypes from 'prop-types';
import intl from 'react-intl-universal';
import DeviceTypeIcon from '../../component/icons/DeviceTypeIcon';
import ActionButton, {BTN_TINT_PRIMARY, BTN_TYPE_OUTLINE} from '../../component/ActionButton';
import { DATE_FORMAT_LONG, DATE_FORMAT_SMART, formatAbsoluteDate, formatRelativeDate } from '../../helpers/DateHelper';
import RouterPortMappingTableRow from './RouterPortMappingTableRow';
import { renderRouterPortMappingTableHeader } from '../../helpers/TableHelper';

export default class RouterPortMappingTable extends PureComponent {

    constructor(props, context) {
        super(props, context);
        this.onClosePorts = this.onClosePorts.bind(this);
        this.onChangePortSelection = this.onChangePortSelection.bind(this);
    }

    onChangePortSelection(rowId) {
        if (this.props.onChangePortSelection) {
            this.props.onChangePortSelection(rowId);
        }
    }

    onClosePorts(ports) {
        if (this.props.onClosePorts) {
            this.props.onClosePorts(ports)
        }
    }

    render() {
        const {portMappings, selectionPorts} = this.props;

        const selectedPorts = selectionPorts && selectionPorts.filter(s => s === true).length || 0;
        return (
            <div>
                <div className="d-flex align-items-center border-bottom pb-3 mb-3">
                    <h3 className="mb-0">{intl.get('routercheck_openports_title')}</h3>
                    <div className="ml-auto">
                        <ActionButton
                            type={BTN_TYPE_OUTLINE}
                            tint={BTN_TINT_PRIMARY}
                            disabled={selectedPorts === 0}
                            action={() => this.onClosePorts(selectionPorts)}
                            title={intl.get('routercheck_openports_action', {ports: selectedPorts})}/>
                    </div>
                </div>
                <table className="table">
                    {renderRouterPortMappingTableHeader()}
                    <tbody>
                        {React.Children.toArray(portMappings.map((port,index,arr) => 
                            <RouterPortMappingTableRow
                                selectionPorts={selectionPorts}
                                index={index}
                                onChangePortSelection={(rowId)=>this.onChangePortSelection(rowId)}
                                service={port}/>
                        ))}
                    </tbody>
                </table>
            </div>
        );
    }

}

RouterPortMappingTable.propTypes = {
    portMappings: PropTypes.array,
    selectionPorts: PropTypes.array,
    onClosePorts: PropTypes.func,
    onChangePortSelection: PropTypes.func
};